#!/usr/bin/perl


use CIBH::Datafile;
use Getopt::Long;

if (-r "$ENV{HOME}/.cibhrc") {
    require "$ENV{HOME}/.cibhrc";
}

# set the default values
$opts={data_path=>".",
       %{$default_options}};

GetOptions($opts,
           "quiet",
           "data_path=s");

@lines=<>;

# This needs to figure out which interface it is looking
# at and include this with the filename.  If it doesn't
# do this two interfaces connected to the same lan will
# have filename collision.  For now I must make the
# assumption that the interface name will be on the
# line immediately following sh int.  I WILL ASSUME
# "sh int", not "show interface" will be used...

sub ReadMacs {
    my($pre)=(@_);
    my($post,$iface);
# this reads the first line and gets the first word
    while($_=shift(@lines)) {
        # from my run it looks like the # is the best way to
        # figure out the mac accounting has stopped...
        unshift(@lines,$_),last if /\#/;
        $post="in",next if/^\s*Input/;
        $post="out",next if/^\s*Output/;
        if(/^([A-Z][\w\/]+)/) {
          $iface=$1;
          $iface=~s/\//\./g;
          next;
        }
        if(my($mac,$packets,$bytes)=
           /^\s*([\da-f\.]+).* (\d+) packets,.* (\d+) bytes/) {

#   only want to store if mac has arp entry?  if yup, keep this line
#   and make sure to issue sho arp prior to sh int mac-account
#            next if not defined $arp{$mac};

#   want to store as mac address or ip address - below converts to IP
            $mac=$arp{$mac} if defined $arp{$mac};
            my $val=
              CIBH::Datafile::CounterAppend("$pre/mac-$iface-$mac.bits.$post",
                                            $bytes*8);
              CIBH::Datafile::Store("$pre/mac-$iface-$mac.bits.$post.text",$val);
#            my $val=
#              CIBH::Datafile::CounterAppend("$pre/$iface-$mac.packets.$post",
#                                            $packets);
#          CIBH::Datafile::Store("$pre/$iface-$mac.packets.$post.text",$val);
        }
    }
}


sub ReadArp {
# this reads the first line and gets the first word
    while($_=shift(@lines)) {
        unshift(@lines,$_),last if /\#/;
        $arp{$2}=$1 if /^Internet\s+([\d\.]+)\s+\S+\s+([\da-f\.]+)/;
    }
}

while($_=shift(@lines)) {
# set router name using something from stdin....
    ($rtr=$1) if /^([\w]+)([\.\w])*\#/;
# use this if you want the full name:
#    ($rtr=$1) if /^([\w\.]+)\#/;
    ReadMacs("$opts->{data_path}/$rtr") 
        if /\#sh((o)|(ow))? int(erface)?.* mac-accounting/;
    ReadArp if /\#sh((o)|(ow))? arp/;
}  




